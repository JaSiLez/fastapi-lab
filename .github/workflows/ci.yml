name: CI FastAPI

on:

  pull_request:


env:
  python_version: 3.9
  # Variables used to configure
  IMAGE_REGISTRY: ghcr.io
  IMAGE_REPO: jasilez/fastapi-lab
  VERSION: develop

jobs:

  pytest:
    name: Unit Testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov pytest-html pytest-sugar pytest-json-report
        pytest -v --cov --html=reports/pytest/report.html
    - name: Archive pytest coverage results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-coverage-report
        path: reports/pytest/

  docker_ci:
    name: Build & Push Image
    needs: pytest
    runs-on: ubuntu-latest
    steps:
      - name: Download code
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to GHCR
        run: |
          echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.actor}} --password-stdin
      
      - name: Build and push into ghcr.io
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          load: false
          pull: false
          push: true # ${{ github.event_name == "pull_request" }}    
          tags: ${{ env.IMAGE_REPO }}:latest
      
      - name: Image digest
        run: |
          echo ${{ steps.docker_build.outputs.digest }}
          

      - name: Public IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Print Public IP & Docker Run
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}
          docker run -d -p 8000:8000 -p 8081:8081 --name simple-server ghcr.io/${{ github.repository }}:latest
  

      - name: Print Public IP & Docker Run
        run: |
          echo ${{ steps.ip.outputs.ipv4 }}
          echo ${{ steps.ip.outputs.ipv6 }}
          docker run -d -p 8000:8000 -p 8081:8081 --name simple-server ghcr.io/${{ github.repository }}:latest
          docker rmi  ghcr.io/${{ github.repository }}:latest
  